{
  "openapi": "3.0.0",
  "info": {
    "title": "nodebackend",
    "version": "1.0.0",
    "description": "API Documentation"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api/v1",
      "description": "Local server"
    },
    {
      "url": "http://test-server.com/api/v1",
      "description": "Test server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Bearer Token"
      }
    }
  },
  "schemas": {
    "User": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string",
          "description": "User's full name",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "description": "User's email address",
          "example": "john.doe@example.com"
        },
        "passowrd": {
          "type": "string",
          "description": "User's password",
          "example": "Password@123"
        }
      },
      "required": ["fullName", "email", "password"],
      "additionalProperties": false
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "User's email address",
          "example": "john.doe@example.com"
        },
        "passowrd": {
          "type": "string",
          "description": "User's password",
          "example": "password@123"
        }
      },
      "required": ["email", "password"],
      "additionalProperties": false
    },
    "UpdateUserDetails": {
      "type": "object",
      "properties": {
        "gender": {
          "type": "string",
          "description": "User's gender",
          "example": "Man"
        },
        "dob": {
          "type": "string",
          "description": "User's data of birth",
          "format": "date",
          "example": "2000-01-01"
        },
        "houseNumber": {
          "type": "string",
          "description": "User's house number",
          "example": "1234"
        },
        "address": {
          "type": "string",
          "description": "User's address",
          "example": "123 Main st."
        },
        "pincode": {
          "type": "string",
          "description": "User's pincode",
          "example": "123 Main st."
        },
        "city": {
          "type": "string",
          "description": "User's city",
          "example": "Anytown"
        },
        "state": {
          "type": "string",
          "description": "User's state",
          "example": "Anystate"
        },
        "country": {
          "type": "string",
          "description": "User's country",
          "example": "Anyland"
        }
      },
      "required": [
        "gender",
        "dob",
        "houseNumber",
        "pincode",
        "city",
        "state",
        "country"
      ],
      "additionalProperties": false
    }
  },
  "paths": {
    "/register-user": {
      "post": {
        "tags": ["signup"],
        "summary": "Sign up User",
        "description": "Sign up User",
        "requestBody": {
          "description": "Enter all required fields value",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed up successfully"
          },
          "400": {
            "description": "Bad Request - Invalid input"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/signin": {
      "post": {
        "tags": ["login"],
        "summary": "Log in User",
        "description": "Login in User",
        "requestBody": {
          "description": "Enter email and password",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Bad Request - Invalid input"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/add-user-info": {
      "put": {
        "tags": ["user"],
        "summary": "Add User Gender, Date of Birth, and Address",
        "description": "Add User Gender, Date of Birth, and Address.",
        "requestbody": {
          "description": "Enter gender, date of birth, and address details.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information added successfully"
          },
          "400": {
            "description": "Bad Request - Invalid input"
          },
          "404": {
            "description": "Not Found - User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/get-country": {
      "get": {
        "tags": ["location"],
        "summary": "Get All Countries",
        "description": "Retrieve a list of all countries",
        "responses": {
          "200": {
            "description": "List of countries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Country name"
                      },
                      "isoCode": {
                        "type": "string",
                        "description": "Country ISO Code"
                      },
                      "phoneCode": {
                        "type": "string",
                        "description": "Country phone code"
                      },
                      "flag": {
                        "type": "string",
                        "description": "Country flag URL"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/get-state": {
      "get": {
        "tags": ["location"],
        "summary": "Get States by Country Code",
        "description": "Retrieve a list of all states by country code",
        "parameters": [
          {
            "name": "countryCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Country ISO Code to filter states"
          }
        ],
        "responses": {
          "200": {
            "description": "List of states",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "State ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "State name"
                      },
                      "isoCode": {
                        "type": "string",
                        "description": "State ISO code"
                      },
                      "countryCode": {
                        "type": "string",
                        "description": "Country ISO Code"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid Input"
          },
          "404": {
            "description": "Not Found - States not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/get-city": {
      "get": {
        "tags": ["location"],
        "summary": "Get Cities by state Code",
        "description": "Retrieve a list of all cities by state code",
        "parameters": [
          {
            "name": "countryCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Country ISO Code to filter cities"
          },
          {
            "name": "stateCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "State ISO code to filter cities"
          }
        ],
        "responses": {
          "200": {
            "description": "List of cities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "City Id"
                      },
                      "name": {
                        "type": "string",
                        "description": "City name"
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "City postal code"
                      },
                      "state": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "State ID"
                          },
                          "isoCode": {
                            "type": "string",
                            "description": "State ISO code"
                          }
                        }
                      },
                      "country": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Country ID"
                          },
                          "isoCode": {
                            "type": "string",
                            "description": "Country ISO Code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input"
          },
          "404": {
            "description": "Not Found - Cities not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/get-postal-code": {
      "get": {
        "tags": {
          "tags": ["location"],
          "summary": "Get Postal Code by City Name",
          "description": "Retreive the postal code for a given city name",
          "parameters": [
            {
              "name": "cityName",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "City name to filter postal codes"
            }
          ],
          "responses": {
            "200": {
              "description": "Postal code retreived successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Postal code ID"
                        },
                        "name": {
                          "type": "string",
                          "description": "City name"
                        },
                        "stateCode": {
                          "type": "string",
                          "description": "State ISO Code"
                        },
                        "countryCode": {
                          "type": "string",
                          "description": "Country ISO Code"
                        },
                        "postalCode": {
                          "type": "string",
                          "description": "Postal Code"
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request - Invalid input"
            },
            "404": {
              "description": "Not Found - Postal code not found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
